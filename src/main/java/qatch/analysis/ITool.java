package qatch.analysis;

import java.nio.file.Path;
import java.util.Map;

/**
 * Interface definition for static analysis tools.
 *
 * All tools must define how they run, how to parse the results file,
 * and how to transform the parsed data, if needed.
 */
public interface ITool {

    /**
     * Run the external static analysis tool (often a binary or .exe)
     *
     * @param projectLocation
     *      Root directory location needed by the tool to perform its analysis
     *      on the given project.
     * @return
     *      The location of the analysis results: often a .xml or .json file.
     *      Ideally this file should be a temporary file stored on disk only
     *      as long as is necessary.
     */
    Path analyze(Path projectLocation);


    /**
     * Parse the analysis file generated by the tool and transform the data
     * into Diagnostic objects with associated Findings (if any exist).
     *
     * @param toolResults
     *      The location of the output file generated by running the static analysis tool
     * @return
     *      A mapping (Key: diagnostic name, Value: diagnostic object) of the parsed diagnostics
     */
    Map<String, Diagnostic> parseAnalysis(Path toolResults);


    /**
     * @return
     *      The name of the tool
     */
    String getName();
}

