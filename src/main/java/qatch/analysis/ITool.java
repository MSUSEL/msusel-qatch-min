package qatch.analysis;

import java.nio.file.Path;

/**
 * Interface definition for static analysis tools.
 *
 * All tools must define how they run, how to parse the results file,
 * and how to transform the parsed data, if needed.
 */
public interface ITool {

    /**
     * Run the external static analysis tool (often a binary or .exe)
     *
     * @param projectLocation
     *      Root directory location needed by the tool to perform its analysis
     *      on the given project
     * @return
     *      The location of the analysis results: often a .xml or .json file.
     *      Ideally this file should be a temporary file stored on disk only
     *      as long as is necessary.
     */
    public Path analyze(Path projectLocation);

    /**
     * Parse the analysis file generated by the tool and transform the data
     * into an AnalysisResult object.
     *
     * Because the output of any given external static analysis tool can vary greatly in
     * format and available information, it is the job of this tool implementation to
     * create an AnalysisResult object for each measure it is meant to provide.
     *
     * @param toolResults
     *      The locatino of the output file generated by running the static analysis tool
     * @return
     *      An AnalyisisResult object representing the parsed tool result data with
     *      a mapping of property names to numeric measure values
     */
    public AnalylsisResult parse(Path toolResults);
}
